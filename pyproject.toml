[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11>=2.6.0",
    "numpy>=1.18.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "trendfilter"
version = "0.1.0"
description = "Python package for fast and flexible univariate trend filtering"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jiaping Liu", email = "jiaping.liu@stat.ubc.ca"},
    {name = "Daniel J McDonald", email = "daniel@stat.ubc.ca"},
    {name = "Addison Hu", email = "mail@huisaddison.com"}
]
keywords = ["trend filtering", "signal processing", "signal denoising", "optimization", "statistics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.18.0",
    "scipy>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "types-setuptools",
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/jiapivialiu/trendfilter-py"
Repository = "https://github.com/jiapivialiu/trendfilter-py"
Documentation = "https://trendfilter.readthedocs.io"
"Bug Tracker" = "https://github.com/jiapivialiu/trendfilter-py/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["trendfilter*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=trendfilter --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
disable_error_code = "no-any-return"

[tool.cibuildwheel]
# Build for Python 3.8-3.12
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"

# Skip 32-bit builds, PyPy, and musl on Linux
skip = [
    "*-win32",
    "*-manylinux_i686", 
    "*-musllinux_*",
    "pp*"
]

# Test the built wheels
test-requires = ["pytest", "numpy>=1.18.0", "scipy>=1.5.0"]
test-command = [
    "python -c \"import trendfilter; print('Import successful')\"",
    "python -c \"import trendfilter; import numpy as np; tf = trendfilter.TrendFilter(); print('Basic functionality working')\""
]

# Build settings for different platforms
[tool.cibuildwheel.linux]
before-all = [
    # Install Eigen3 for manylinux (CentOS/RHEL based)
    "yum update -y",
    "yum install -y epel-release",
    """yum install -y eigen3-devel || {
        echo "Installing Eigen3 from source..."
        yum install -y wget tar
        cd /tmp
        wget -q https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
        tar xzf eigen-3.4.0.tar.gz
        mkdir -p /usr/include/eigen3
        cp -r eigen-3.4.0/Eigen /usr/include/eigen3/
        cp -r eigen-3.4.0/unsupported /usr/include/eigen3/
        echo "Eigen3 installed to /usr/include/eigen3"
    }"""
]

# Use manylinux2014 for broader compatibility
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

[tool.cibuildwheel.windows]
before-all = """powershell -Command "
Write-Host 'Installing Eigen3 from source on Windows...';
Invoke-WebRequest -Uri 'https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip' -OutFile 'eigen.zip';
Expand-Archive -Path 'eigen.zip' -DestinationPath 'C:\\temp' -Force;
New-Item -Path 'C:\\eigen3' -ItemType Directory -Force;
Copy-Item -Path 'C:\\temp\\eigen-3.4.0\\Eigen' -Destination 'C:\\eigen3\\Eigen' -Recurse -Force;
Copy-Item -Path 'C:\\temp\\eigen-3.4.0\\unsupported' -Destination 'C:\\eigen3\\unsupported' -Recurse -Force;
Write-Host 'Eigen3 installed to C:\\eigen3'
\""""

environment = { EIGEN3_INCLUDE_DIR = "C:/eigen3" }

[tool.cibuildwheel.macos]
before-all = [
    "brew install eigen"
]

# Build for both x86_64 and ARM64 (Apple Silicon)
archs = ["x86_64", "arm64"]

# Minimum macOS version for compatibility - use 11.0 for better GitHub Actions compatibility
environment = { MACOSX_DEPLOYMENT_TARGET = "11.0" }
