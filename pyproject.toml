[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11>=2.6.0",
    "numpy>=1.18.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "trendfilter"
version = "0.1.0"
description = "Python package for fast and flexible univariate trend filtering"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Jiaping Liu", email = "jiaping.liu@stat.ubc.ca"},
    {name = "Daniel J McDonald", email = "daniel@stat.ubc.ca"},
    {name = "Addison Hu", email = "mail@huisaddison.com"}
]
keywords = ["trend filtering", "signal processing", "signal denoising", "optimization", "statistics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.18.0",
    "scipy>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "types-setuptools",
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/jiapivialiu/trendfilter-py"
Repository = "https://github.com/jiapivialiu/trendfilter-py"
Documentation = "https://trendfilter.readthedocs.io"
"Bug Tracker" = "https://github.com/jiapivialiu/trendfilter-py/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["trendfilter*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=trendfilter --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
disable_error_code = "no-any-return"

[tool.cibuildwheel]
# Build for Python 3.8-3.12
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"

# Skip 32-bit builds, PyPy, and musl on Linux
skip = [
    "*-win32",
    "*-manylinux_i686", 
    "*-musllinux_*",
    "pp*"
]

# Test the built wheels
test-requires = ["pytest", "numpy>=1.18.0", "scipy>=1.5.0"]
test-command = [
    "python -c 'import trendfilter; print(\"✓ Import successful!\")'",
    "python -c 'import trendfilter; import numpy as np; tf = trendfilter.TrendFilter(); y = np.random.randn(10); tf.fit(y); print(\"✓ Basic functionality working!\")'"
]

# Build settings for different platforms
[tool.cibuildwheel.linux]
before-all = [
    # Try different package managers for Eigen3
    "yum update -y && (yum install -y eigen3-devel || yum install -y epel-release && yum install -y eigen3-devel) || true",
    "apt-get update && apt-get install -y libeigen3-dev || true", 
    "apk add --no-cache eigen-dev || true"
]

# Use manylinux2014 for broader compatibility
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

[tool.cibuildwheel.windows]
before-all = [
    "vcpkg install eigen3:x64-windows"
]

environment = { EIGEN3_INCLUDE_DIR = "C:/vcpkg/installed/x64-windows/include" }

[tool.cibuildwheel.macos]
before-all = [
    "brew install eigen"
]

# Build for both x86_64 and ARM64 (Apple Silicon)
archs = ["x86_64", "arm64"]

# Minimum macOS version for compatibility
environment = { MACOSX_DEPLOYMENT_TARGET = "10.14" }
